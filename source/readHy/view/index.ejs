<!doctype html>
<html>
<head>
	<meta charset='utf-8'>
	<title>index</title>
	<style>
	* {margin:0px; padding:0px;background:#000;}
	h1{text-align:center; color: #fff;}
	canvas{display:block;margin:5px auto;border: 1px solid #ccc;}
	.left{ display: none; position: fixed; left: 0px; top:250px; width: 80px; height: 142px; background: transparent; cursor: pointer; z-index: 100; }
	.left:before{ display:block; content:''; position: absolute; width: 100px; height: 4px; top: 35px; left: -10px; background:#aaa; transform:rotate(-45deg); }
	.left:after{ display:block; content:''; position: absolute; width: 100px; height: 4px; top: 104px; left: -10px; background:#aaa; transform:rotate(45deg); }
	.right{ position: fixed; right: 0px; top:250px; width: 80px; height: 142px; background: transparent; cursor: pointer; z-index: 100;}
	.right:before{ display:block; content:''; position: absolute; width: 100px; height: 4px; top: 35px; right: -10px; background:#aaa; transform:rotate(45deg); }
	.right:after{ display:block; content:''; position: absolute; width: 100px; height: 4px; top: 104px; right: -10px; background:#aaa; transform:rotate(-45deg); }
	</style>
</head>
<body>
	<input type='hidden' id='files' value='<%=files %>' />
	<input type='hidden' id='pathname' value='<%=pathname %>'>
	<div id='left' class='left'></div>
	<div id='right' class='right'></div>
	<h1 id='filename'></h1>
	<canvas id='canvas'></canvas>
<script>
(function(){
	var left = document.getElementById('left');
	var right = document.getElementById('right');

	var files = document.getElementById('files').value;
	var pathname = document.getElementById('pathname');
	var filename = document.getElementById('filename');
	var fileArr = files.split(',');
	var canvas = document.getElementById('canvas');
	canvas.width = window.innerWidth - 160;
	canvas.height = window.innerHeight - 60;
	var context = canvas.getContext('2d');

	var offCanvas = document.createElement('canvas');
	var offContext = offCanvas.getContext('2d');

	var config = {
		scale: 2,
		r: 200
	};
	var data = {
		canvas: {},
		offCanvas: {}
	};

	var index = 0;
	var img = new Image();

	document.body.onmousewheel = function(event) {
		console.log(event);
		if (event.wheelDelta > 0) {
			index = (index == 0) ? 0 : (index - 1);
			if (index == 0) {
				left.style.display = 'none';
			} else {
				left.style.display = 'block';
			}
			if (index != fileArr.length - 1) {
				right.style.display = 'block';
			}
			show();
		} else {
			index = (index == fileArr.length - 1) ? (fileArr.length - 1) : (index + 1);
			if (index == fileArr.length - 1) {
				right.style.display = 'none';
			} else {
				right.style.display = 'block';
			}
			if (index != 0) {
				left.style.display = 'block';
			}
			show();
		}
	}

	left.onclick = function() {
		index = (index == 0) ? 0 : (index - 1);
		if (index == 0) {
			left.style.display = 'none';
		} else {
			left.style.display = 'block';
		}
		if (index != fileArr.length - 1) {
			right.style.display = 'block';
		}
		show();
	};
	right.onclick = function() {
		index = (index == fileArr.length - 1) ? (fileArr.length - 1) : (index + 1);
		if (index == fileArr.length - 1) {
			right.style.display = 'none';
		} else {
			right.style.display = 'block';
		}
		if (index != 0) {
			left.style.display = 'block';
		}
		show();
	};
	show();
	function show() {
		var file = fileArr[index];
		img.src = file;
		img.onload = function() {
			filename.innerText = pathname.value + file.substring(0, file.indexOf('.'));
			draw()
		};
	}

	canvas.addEventListener('mousemove', function(e) {
		var point = windowToCanvas(e.clientX, e.clientY);
		drawMagnifier(point);
	}, false);

	function draw() {
		initData();
		drawImg();
	}

	function drawImg() {
		context.clearRect(0, 0, canvas.width, canvas.height);
		context.drawImage(img, data.canvas.imgx, data.canvas.imgy, data.canvas.imgw, data.canvas.imgh);
		offContext.drawImage(img, 0, 0, offCanvas.width, offCanvas.height);
	}

	function initData() {
		data.canvas.width = canvas.width;
		data.canvas.height = canvas.height;

		var scale;
		if (img.width < canvas.width && img.height < canvas.height) {
			scale = 1;
			data.canvas.imgx = (canvas.width - img.width) / 2;
			data.canvas.imgy = (canvas.height - img.height) / 2;
			data.canvas.imgw = img.width;
			data.canvas.imgh = img.height;
		} else {
			var xScl = img.width / canvas.width;
			var yScl = img.height / canvas.height;
			scale = (xScl > yScl) ? xScl : yScl;
			var imgW = img.width / scale;
			var imgH = img.height / scale;
			data.canvas.imgx = (canvas.width - imgW) / 2;
			data.canvas.imgy = (canvas.height - imgH) / 2;
			data.canvas.imgw = imgW;
			data.canvas.imgh = imgH;
		}
		
		data.offCanvas.width = offCanvas.width = img.width / scale * config.scale;
		data.offCanvas.height = offCanvas.height = img.height / scale * config.scale;
	}

	function drawMagnifier(point) {
		context.clearRect(0, 0, canvas.width, canvas.height);
		offContext.clearRect(0, 0, offCanvas.width, offCanvas.height);

		drawImg();

		context.save();
		context.beginPath();
		context.arc(point.x, point.y, config.r, 0, 2 * Math.PI, false);
		context.strokeStyle = '#069';
		//context.stroke();
		context.clip();
		context.drawImage(
			offCanvas, 
			(1 - config.scale) * (point.x - data.canvas.imgx) + data.canvas.imgx, 
			(1 - config.scale) * (point.y - data.canvas.imgy) + data.canvas.imgy,
			offCanvas.width,
			offCanvas.height
		)
		context.restore();
	}

	function windowToCanvas(x, y) {
		var box = canvas.getBoundingClientRect();
		return {
			x: x - box.left,
			y: y - box.top
		};
	}
})();
</script>
</body>
</html>
