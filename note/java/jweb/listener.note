监听器
	监听器就睡一个实现特定接口的普通java程序，这个程序专门用于监听另外一个java对象的方法调用和属性改变，当监听对象发生上述事件后，监听器某个方法将立即被执行

windows 窗口监听器

面试题： 描述java事件监听机制

1. java的事件监听机制涉及到三个组件：事件源、事件监听器、事件对象
2. 当事件源上发生操作时，它将会调用事件监听器的一个方法，并在调用这个方法时，会传递事件对象过来。
3. 事件监听器由开发人员编写，开发人员在事件监听器中，通过事件对象可以拿到事件源，从而对事件源上的操作进行处理

观察者设计模式(observer设计模式)
	
	class Person {
		public void run() {
			if(listener != null) {
				this.listener.doRun();
			}

			System.out.println("run..");
		}

		public void eat() {
			if(listener != null) {
				this.listener.doEat();
			}

			System.out.println("eat..");
		}

		public void registerListener(PersonListener listener) {
			this.listener = listener;
		}
	}

	interface PersonListener {
		public void doRun();

		public void doEat();
	}


Servlet 监听器
	事件源：ServletContext HttpSession  ServletRequest

	三大类型监听器
		监听三个与对象的创建和销毁的事件监听器
		监听与对象中属性的增加和删除的事件监听器
		监听绑定到HttpSession域中某个对象的状态的事件监听器

	ServletContextListener 监听到servletContext的创建和销毁
	HttpSessionListener	监听session的创建和销毁
	ServletRequestListener	讲台request的创建和销毁

	ServletContextAttributeListener 添加 删除和替换 
		attributeAdded() attributeRemoved() attributeReplaced()
		ServletContextAttributeEvent 可以查看属性的name和value
	
	ServletRequestAttributeListener 监听到
	ServletSessionAttributeListener


	HttpSessionBindingListener
	HttpSessionActivationListener

	public class MyServletContextListener implements ServletContextListener {
		public void contextInitialized(ServletContextEvent sce) {
		}
		public void contextDestroyed(servletContextEvent sce) {
		}
	}
	
	<listener>
		<listener-class></listener-class>
	</listener>

	应用场景：web应用在启动时，运行的代码 如 定时器 spring

	public class MyHttpSessionListener {
	}

	request监听器 可以查看点击量信息。。。

统计当前在线人数

自定义session扫描器
	
	
定时发邮件
	
	public class SendMailTimer implements ServletContextListener {
		 
		 public void contextInitialized() {
			Timer timer = new Timer();
			Calendar c = Calendar.getinstance();
			c.set(2016, 6, 23, 23, 45, 0);
			timer.schedule(new TimerTask() {
				System.out.println("mail");
			}, c.getTime().getTIme());
		 }
	}
